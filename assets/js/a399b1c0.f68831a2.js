"use strict";(self.webpackChunkplatform_docs=self.webpackChunkplatform_docs||[]).push([[7639],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),p=i,h=m["".concat(s,".").concat(p)]||m[p]||u[p]||o;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3324:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),r=["components"],l={sidebar_position:3},s={unversionedId:"tutorial/create-an-item",id:"tutorial/create-an-item",isDocsHomePage:!1,title:"Create a new item",description:"Let's start by creating an item in the platform. An item can be used in your video games. For instance,",source:"@site/docs/tutorial/create-an-item.md",sourceDirName:"tutorial",slug:"/tutorial/create-an-item",permalink:"/platform-docs/docs/tutorial/create-an-item",editUrl:"https://github.com/jwa-lab/platform-docs/docs/docs/tutorial/create-an-item.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Authorization",permalink:"/platform-docs/docs/tutorial/authorization"},next:{title:"Assign an item",permalink:"/platform-docs/docs/tutorial/assign-an-item"}},d=[{value:"Retrieve item",id:"retrieve-item",children:[]},{value:"Update item",id:"update-item",children:[]},{value:"Freeze Item",id:"freeze-item",children:[]}],c={toc:d};function u(e){var t=e.components,l=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Let's start by creating an item in the platform. An item can be used in your video games. For instance,\nif you're a farmer raising poultry, you may hope to one day find a golden goose. A golden goose is a very rare and desirable animal,\nso we'll only create 10 of them. We'll start by adding the golden goose to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Item Service"),'. Locate the "Create a new item" request in Postman and update\nthe fields to these values in the Body tab.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "frozen": false,\n    "name": "Golden Goose",\n    "data": {\n        "level": "rare",\n        "type": "goose",\n        "attribute": "gold"\n    },\n    "total_quantity": 10\n}\n')),(0,o.kt)("p",null,'And hit "send". This will return the new item, including the automatically populated ones:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "item_id": 1, // item id is a number. It starts with 1 and increases by 1\n    "studio_id": "studio_id", // The studio id, coming from the Auth Token\n    "name": "Golden Goose",\n    "total_quantity": 10,\n    "available_quantity": 10, // Automatically set to `total_quantity`\n    "frozen": false,\n    "data": {\n        "type": "goose",\n        "level": "rare",\n        "attribute": "gold"\n    },\n    "fulltext": "goose rare gold Golden Goose",\n    "tezos_contract_address": null, // The tokenization information, will be set when the item is tokenized\n    "tezos_block": null\n}\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"create-item",src:n(4028).Z})),(0,o.kt)("h2",{id:"retrieve-item"},"Retrieve item"),(0,o.kt)("p",null,'We have now created our first item in the platform. Let\'s retrieve it to see what it looks like.\nLocate the "Get an existing item given its item_id" request and set ',(0,o.kt)("inlineCode",{parentName:"p"},"item_id"),' param in "Params" to 1.'),(0,o.kt)("p",null,"this should return the original item with some additional information:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "item_id": 1,\n    "studio_id": "studio_id",\n    "name": "Golden Goose",\n    "total_quantity": 10,\n    "available_quantity": 10,\n    "frozen": false,\n    "data": {\n        "type": "goose",\n        "level": "rare",\n        "attribute": "gold"\n    },\n    "fulltext": "goose rare gold Golden Goose",\n    "tezos_contract_address": "KT1LeRvbGcDYz4tczEgUL7xNs6rxznRCQFdP",\n    "tezos_block": "BLSHjGTKQfkBEMDgBAve9oxHyXkrFuAzo36EfSjVdkPbyRujFfi"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"item_id"),": We can see that the item_id has been added and is set to 1. This field can't be changed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"studio_id"),": the studio_id field contains the unique id for authenticated studio. This is a hard coded value from our mock authentication service but this will be a different value for each studio. This allows us to verify that only the owner of the item may change it or assign it to a user."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tezos_block"),": The block in which the item was tokenized! You can see it in the Tezos explorer started by the platform: http://localhost:8002/explorer/block/",(0,o.kt)("inlineCode",{parentName:"li"},"<put your tezos block here>")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tezos_contract_address"),": The smart contract in which the item was tokenized. http://localhost:8002/explorer/contract/",(0,o.kt)("inlineCode",{parentName:"li"},"<put the contract address here>"))),(0,o.kt)("p",null,"Please note that ",(0,o.kt)("inlineCode",{parentName:"p"},"tezos_block")," represents the last block in which the item was persisted. If the item gets updated, the ",(0,o.kt)("inlineCode",{parentName:"p"},"tezos_block")," field will only be updated when the new operation completes, and it will show the old value until then."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"get-item",src:n(6923).Z})),(0,o.kt)("p",null,"To locate the item in the blockchain given its tokenization information, please follow ",(0,o.kt)("a",{parentName:"p",href:"/docs/tokenization/tezos"},"this documentation"),"."),(0,o.kt)("h2",{id:"update-item"},"Update item"),(0,o.kt)("p",null,"Let's assume that we made a mistake when we created the item. A Golden Goose is actually more than rare, it's legendary and there can only be one.\nLocate the \"Update an item\" request and update the required values, then hit Send."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "item_id": 1,\n    "frozen": false,\n    "name": "Golden Goose",\n    "data": {\n        "level": "legendary",\n        "type": "goose",\n        "attribute": "gold"\n    },\n    "total_quantity": 1\n}\n')),(0,o.kt)("p",null,"This will return the updated item."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"update-item",src:n(611).Z})),(0,o.kt)("p",null,"Awesome, we can now create, update and get items."),(0,o.kt)("h2",{id:"freeze-item"},"Freeze Item"),(0,o.kt)("p",null,"You may have noticed the ",(0,o.kt)("inlineCode",{parentName:"p"},"frozen")," field. Setting it to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," means that the item may no longer be updated. This should give confidence to your users that the items they've purchased can't change anymore.\nThere is a check in the smart contracts to verify the value of the ",(0,o.kt)("inlineCode",{parentName:"p"},"frozen")," field, so this is set in stone and can't be changed just like the smart contract itself can't change.\nWe will soon add a convenience method for freezing an item, but for now you can do so by updating an item."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"freeze-item",src:n(9143).Z})),(0,o.kt)("p",null,"Great! Let's now assign items to users!"))}u.isMDXComponent=!0},4028:function(e,t,n){t.Z=n.p+"assets/images/create-item-d0a65984b9850cd017dbd3a392195095.png"},9143:function(e,t,n){t.Z=n.p+"assets/images/freeze-item-a1a7d9272296df09f3b23d177963fc90.png"},6923:function(e,t,n){t.Z=n.p+"assets/images/get-item-eec628b67b241d0e1e2de38e5dde08cb.png"},611:function(e,t,n){t.Z=n.p+"assets/images/update-item-34c33de420bf228bb8056fc0d4a4703c.png"}}]);