"use strict";(self.webpackChunkplatform_docs=self.webpackChunkplatform_docs||[]).push([[3409],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=a,m=d["".concat(p,".").concat(h)]||d[h]||c[h]||r;return n?o.createElement(m,i(i({ref:t},s),{},{components:n})):o.createElement(m,i({ref:t},s))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1959:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],l={},p={unversionedId:"authentication/playtix-connect",id:"authentication/playtix-connect",isDocsHomePage:!1,title:"PlayTiX Connect",description:"PlatyTiX Connect is an Identity Provider that allows your apps to connect with all the players",source:"@site/docs/authentication/playtix-connect.md",sourceDirName:"authentication",slug:"/authentication/playtix-connect",permalink:"/platform-docs/docs/authentication/playtix-connect",editUrl:"https://github.com/jwa-lab/platform-docs/docs/docs/authentication/playtix-connect.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Help",permalink:"/platform-docs/docs/help"}},u=[{value:"Okta",id:"okta",children:[]},{value:"OAuth 2.0 &amp; OpenID Connect",id:"oauth-20--openid-connect",children:[{value:"Authorization Code flow",id:"authorization-code-flow",children:[]},{value:"Tokens",id:"tokens",children:[]}]},{value:"Workflow",id:"workflow",children:[{value:"Requirements",id:"requirements",children:[]},{value:"Get the tokens",id:"get-the-tokens",children:[]},{value:"What to do the tokens ?",id:"what-to-do-the-tokens-",children:[]}]}],s={toc:u};function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"PlatyTiX Connect is an Identity Provider that allows your apps to connect with all the players\nfrom the PlayTiX Platform."),(0,r.kt)("p",null,"Technically, it is a standard OpenID Connect (OIDC) Provider supporting the Authorization Code flow\n(with or without PKCE)."),(0,r.kt)("p",null,"Many open-source implementations of OIDC clients are available in many languages, so you probably don't\nhave to write everything yourself."),(0,r.kt)("h2",{id:"okta"},"Okta"),(0,r.kt)("p",null,"Behind the scene, PlayTix Connect relies on Okta, a world leading Identity Provider, to ensure a maximum\nlevel of security and compliance with the latest standards.  "),(0,r.kt)("p",null,"As a PlayTiX Connect customer, we provide you a fully configured and secured environment for your application.",(0,r.kt)("br",{parentName:"p"}),"\n","You can find all the required information in the PlayTiX Developer Portal."),(0,r.kt)("h2",{id:"oauth-20--openid-connect"},"OAuth 2.0 & OpenID Connect"),(0,r.kt)("p",null,"OAuth 2.0 is a standard authorization protocol enhanced by OpenID Connect for authentication."),(0,r.kt)("h3",{id:"authorization-code-flow"},"Authorization Code flow"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Authorization Code flow")," allows a ",(0,r.kt)("em",{parentName:"p"},"Client")," application (your game) to get the authorization from a\n",(0,r.kt)("em",{parentName:"p"},"Resource Owner")," (a player from the PlayTiX community) to access a ",(0,r.kt)("em",{parentName:"p"},"Resource Server")," (the PlayTiX API) on its behalf."),(0,r.kt)("h4",{id:"pkce"},"PKCE"),(0,r.kt)("p",null,"If your application is running on the backend and can securely store and use a secret key, then you can use the\ndefault ",(0,r.kt)("strong",{parentName:"p"},"Authorization Code flow"),"."),(0,r.kt)("p",null,"See: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.okta.com/docs/guides/implement-grant-type/authcode/main/"},"https://developer.okta.com/docs/guides/implement-grant-type/authcode/main/")),(0,r.kt)("p",null,"If your application is running on the frontend and cannot securely store and use a secret key, then you must use the\n",(0,r.kt)("strong",{parentName:"p"},"Authorization Code flow with PKCE"),"."),(0,r.kt)("p",null,"See: ",(0,r.kt)("a",{parentName:"p",href:"https://developer.okta.com/docs/guides/implement-grant-type/authcodepkce/main/"},"https://developer.okta.com/docs/guides/implement-grant-type/authcodepkce/main/")),(0,r.kt)("h3",{id:"tokens"},"Tokens"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.okta.com/docs/reference/api/oidc/#access-token"},"Access Token")," : Allows making request to the Resources Server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.okta.com/docs/reference/api/oidc/#id-token"},"ID Token"),": Additional token returned by the OpenID provider that contains information about the end user in the form of claims."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.okta.com/docs/guides/refresh-tokens/overview/"},"Refresh Token"),": Allows to get a new Access Tokens after the initial one is expired.")),(0,r.kt)("h2",{id:"workflow"},"Workflow"),(0,r.kt)("h3",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"In the PlayTiX Developer Portal, you can find:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"your ",(0,r.kt)("inlineCode",{parentName:"li"},"client_id")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"client_secret")),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"/authorize")," endpoint"),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"/token")," endpoint"),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("inlineCode",{parentName:"li"},"/userinfo")," endpoint")),(0,r.kt)("p",null,"As of now, the PlayTiX Developer Portal is not available. If you want to integrate your app please contact us."),(0,r.kt)("p",null,"For now, the defaults to use for the OAuth2 / OpenID endpoints are :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"authorize")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"https://playtix.okta.com/oauth2/aus2dahc1hKc6YaOl5d7/v1/authorize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"token")," : ",(0,r.kt)("inlineCode",{parentName:"li"},"https://playtix.okta.com/oauth2/aus2dahc1hKc6YaOl5d7/v1/token")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"userinfo")," (optional) : ",(0,r.kt)("inlineCode",{parentName:"li"},"https://playtix.okta.com/oauth2/aus2dahc1hKc6YaOl5d7/v1/userinfo"))),(0,r.kt)("p",null,"You will also have to use mandatory scopes in order to either get the user's information, or a refresh token."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"profile")," To get the user's default profile information such as his username."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"email")," To get the user's email address."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openid")," Which is required if you ask for the user's profile."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"offline_access")," Which is required if you want a refresh token.")),(0,r.kt)("p",null,"You also have to set up at least one ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_uri")," for your game."),(0,r.kt)("p",null,"If you run the ",(0,r.kt)("strong",{parentName:"p"},"Authorization Code flow")," from your backend, the ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_uri")," looks\nlike ",(0,r.kt)("inlineCode",{parentName:"p"},"https://my.app.com/playtix-connect/auth/callback"),".",(0,r.kt)("br",{parentName:"p"}),"\n","If you run the ",(0,r.kt)("strong",{parentName:"p"},"Authorization Code flow with PKCE")," from your frontend, the ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_uri")," must use a custom\napp protocol like ",(0,r.kt)("inlineCode",{parentName:"p"},"myapp://")),(0,r.kt)("p",null,"At the end, your authorize request will require the following parameters :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A valid ",(0,r.kt)("inlineCode",{parentName:"li"},"client_id"),"."),(0,r.kt)("li",{parentName:"ul"},"The required ",(0,r.kt)("inlineCode",{parentName:"li"},"scope"),"."),(0,r.kt)("li",{parentName:"ul"},"A registered ",(0,r.kt)("inlineCode",{parentName:"li"},"redirect_uri"),"."),(0,r.kt)("li",{parentName:"ul"},"A random string for the ",(0,r.kt)("inlineCode",{parentName:"li"},"state"),".")),(0,r.kt)("p",null,"Ex:\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://playtix.{...}/v1/authorize?client_id=my_client_id&scope=profile%20openid%20email%20offline_access&redirect_uri=my_redirect_uri&state=random_string")),(0,r.kt)("p",null,"You can find a more information about the endpoints here :\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.okta.com/docs/reference/api/oidc/#endpoints"},"https://developer.okta.com/docs/reference/api/oidc/#endpoints")),(0,r.kt)("h3",{id:"get-the-tokens"},"Get the tokens"),(0,r.kt)("p",null,"Generate an url to the authorization endpoint (this is usually done by your OIDC client library) and open it in a\nbrowser, a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.chrome.com/docs/multidevice/android/customtabs/"},"Chrome Custom Tabs")," or\na ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller"},"Safari View Controller"),"."),(0,r.kt)("p",null,"The user will be prompted to log in and authorize your app to access his account. If he does he will be redirected\nto the ",(0,r.kt)("inlineCode",{parentName:"p"},"redirect_uri")," with an authorization code.",(0,r.kt)("br",{parentName:"p"}),"\n","The authorization code is exchanged for the final tokens (this is usually done by your OIDC client library)."),(0,r.kt)("h3",{id:"what-to-do-the-tokens-"},"What to do the tokens ?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Access Token")," can be used as is to send requests to the PlayTiX API, for example to assign an item instance\nto a player."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"ID Token")," can be used to get information about the player, including his ID that you will need to send requests\nto the PlayTiX API."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("strong",{parentName:"li"},"Refresh Token")," can be stored to get new Access Token when the current one is expired, without the need to start\nthe ",(0,r.kt)("strong",{parentName:"li"},"Authorization Code flow")," again.")))}c.isMDXComponent=!0}}]);